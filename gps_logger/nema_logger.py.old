import serial
import pynmea2
import time
from datetime import datetime, timezone

SERIAL_PORT = '/dev/ttyUSB0'   # Update this if your port is different
BAUD_RATE = 4800               # Common for GPS/NMEA0183; change if needed

def collect_nmea_data(serial_conn, duration=60):
    """Collects NMEA data for a specified duration (seconds) and returns latest known values."""
    data = {
        'latitude': None,
        'longitude': None,
        'sog': None,
        'cog': None,
        'wind_dir': None,
        'wind_speed': None,
        'boat_speed': None,
        'heading': None
    }

    start_time = time.time()

    while time.time() - start_time < duration:
        try:
            line = serial_conn.readline().decode('ascii', errors='replace').strip()
            if not line.startswith('$II') and not line.startswith('$GP'):
                continue

            msg = pynmea2.parse(line)

            if isinstance(msg, pynmea2.types.talker.RMC):
                data['latitude'] = msg.latitude
                data['longitude'] = msg.longitude
                data['sog'] = msg.spd_over_grnd
                data['cog'] = msg.true_course

            elif msg.sentence_type == 'MWV' and msg.status == 'A':
                data['wind_dir'] = msg.wind_angle
                data['wind_speed'] = msg.wind_speed

            elif msg.sentence_type == 'VHW':
                try:
                    fields = line.split(',')
                    if len(fields) >= 7 and fields[5]:
                        data['boat_speed'] = float(fields[5])
                except ValueError:
                    pass

            elif msg.sentence_type == 'HDG':
                try:
                    data['heading'] = float(msg.heading) if msg.heading else None
                except (AttributeError, ValueError):
                    pass

        except pynmea2.nmea.ParseError:
            continue
        except Exception as e:
            print(f"Error: {e}")
            break

    return data

def log_gps():
    with serial.Serial(SERIAL_PORT, BAUD_RATE, timeout=1) as ser:
        while True:
            values = collect_nmea_data(ser)
            now = datetime.now(timezone.utc)
            log_filename = now.strftime("%Y-%m-%d") + ".log"

            log_entry = f"{now.isoformat()} UTC, "
            log_entry += f"Lat: {values['latitude']}, Lon: {values['longitude']}, "
            log_entry += f"SOG: {values['sog']} kn, COG: {values['cog']}°, "
            log_entry += f"Wind: {values['wind_dir']}° at {values['wind_speed']} kn, "
            log_entry += f"Boat Speed: {values['boat_speed']} kn, "
            log_entry += f"Heading: {values['heading']}°\n"

            with open(log_filename, "a") as logfile:
                logfile.write(log_entry)
            print(f"Logged: {log_entry.strip()}")

            time.sleep(60)

if __name__ == "__main__":
    log_gps()
